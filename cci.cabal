--
-- Copyright (C) 2012 Parallel Scientific 
--
-- This file is part of cci-haskell.
--
-- cci-haskell is free software: you can redistribute it and/or modify
-- it under the terms of the GNU General Public License Version 2 as 
-- published by the Free Software Foundation.
--
-- cci-haskell is distributed in the hope that it will be useful,
-- but WITHOUT ANY WARRANTY; without even the implied warranty of
-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-- GNU General Public License for more details.
--
-- You should have received a copy of the GNU General Public License
-- along with cci-haskell.  If not, see <http://www.gnu.org/licenses/>.
--

Name:         cci
Version:      0.0.1
Synopsis:     Bindings for the CCI networking library
Description:  The CCI project is an open-source communication interface that 
              aims to provide a simple and portable API, high performance, 
              scalability for the largest deployments, and robustness in the 
              presence of faults. It is developed and maintained by a 
              partnership of research, academic, and industry members.
              .
              See <http://www.olcf.ornl.gov/center-projects/common-communication-interface> 
              for details.

License:             GPL-2
License-file:        COPYING
Author:              Facundo Domínguez, Parallel Scientific LLC
Maintainer:          Facundo Domínguez <facundo.dominguez@parsci.com>
Category:            Network
Build-Type:          Simple
Cabal-Version:       >= 1.8

source-repository head
    type:     git
    location: https://github.com/parsci/cci-haskell

source-repository this
    type:     git
    location: https://github.com/parsci/cci-haskell
    tag:      0.0.1


Library
  exposed-modules:     Network.CCI
  other-modules:       

  build-depends:       base >= 4.3 && < 5
                       , bytestring
                       
  ghc-options:      -O -Wall
  extra-libraries:  cci

Flag examples
  Description: Build examples
  Default: False

Executable ex-client
  main-is:        examples/Client.hs
  ghc-options:    -O -Wall -idist/build
  if !flag(examples)
    buildable: False
  else
    build-depends:  base, bytestring, cci

Executable ex-pingpong
  main-is:        examples/pingpong.hs
  ghc-options:    -O -Wall -idist/build
  if !flag(examples)
    buildable: False
  else
    build-depends:  base, bytestring, cci, time

Executable ex-server
  main-is:        examples/Server.hs
  ghc-options:    -O -Wall -idist/build
  if !flag(examples)
    buildable: False
  else
    build-depends:  base, bytestring, cci

Test-Suite test-cci
  type:           exitcode-stdio-1.0
  main-is:        Driver.hs
  hs-source-dirs: test
  build-depends:  base, bytestring, cci, containers, binary, process, filepath, mtl, random >= 1.0.1.0
  ghc-options:    -O -Wall -fno-warn-name-shadowing -idist/build


